
services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: personas_db
    environment:
      POSTGRES_DB: personas_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: personas_redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  # Vector Database para RAG
  qdrant:
    image: qdrant/qdrant
    container_name: personas_vectordb
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - app-network

  # API Gateway
  gateway:
    build: ./gateway
    container_name: api_gateway
    ports:
      - "8001:8001"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:3001
      - PERSONAS_SERVICE_URL=http://personas-service:3002
      - CONSULTA_SERVICE_URL=http://consulta-service:3003
      - NLP_SERVICE_URL=http://nlp-service:3004
      - LOG_SERVICE_URL=http://log-service:3005
    depends_on:
      - auth-service
      - personas-service
      - consulta-service
      - nlp-service
      - log-service
    networks:
      - app-network

  # Servicio de Autenticación
  auth-service:
    build: ./services/auth
    container_name: auth_service
    environment:
      - NODE_ENV=production
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/personas_db
      - AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - AUTH0_CLIENT_SECRET=${AUTH0_CLIENT_SECRET}
      - AUTH0_CALLBACK_URL=${AUTH0_CALLBACK_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  # Servicio de Gestión de Personas (CRUD)
  personas-service:
    build: ./services/personas
    container_name: personas_service
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/personas_db
      - LOG_SERVICE_URL=http://log-service:3005
    volumes:
      - personas_uploads:/uploads
    depends_on:
      - postgres
      - log-service
    networks:
      - app-network

  # Servicio de Consultas (escalable)
  consulta-service:
    build: ./services/consulta
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/personas_db
      - REDIS_URL=redis://redis:6379
      - LOG_SERVICE_URL=http://log-service:3005
    depends_on:
      - postgres
      - redis
      - log-service
    networks:
      - app-network

  # Servicio de NLP con RAG
  nlp-service:
    build: ./services/nlp
    container_name: nlp_service
    environment:
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - QDRANT_URL=http://qdrant:6333
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/personas_db
      - LOG_SERVICE_URL=http://log-service:3005
    depends_on:
      - postgres
      - qdrant
      - log-service
    networks:
      - app-network

  # Servicio de Logs
  log-service:
    build: ./services/log
    container_name: log_service
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://admin:admin123@postgres:5432/personas_db
    depends_on:
      - postgres
    networks:
      - app-network

  # Frontend React (NEW)
  frontend-react:
    build: ./frontend-react
    container_name: react_app
    ports:
      - "80:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:8001/api
      - VITE_APP_NAME=Sistema de Gestión de Personas
      - VITE_APP_VERSION=1.0.0
      - VITE_AUTH0_DOMAIN=${AUTH0_DOMAIN}
      - VITE_AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}
      - VITE_AUTH0_REDIRECT_URI=http://localhost/auth/callback
      - VITE_FRONTEND_URL=http://localhost
    depends_on:
      - gateway
    networks:
      - app-network

  # Frontend Flask (LEGACY - commented out)
  # frontend:
  #   build: ./frontend
  #   container_name: flask_app
  #   ports:
  #     - "5000:5000"
  #   environment:
  #     - API_GATEWAY_URL=http://gateway:8001
  #     - FLASK_SECRET_KEY=your-flask-secret-key-change-in-production
  #   depends_on:
  #     - gateway
  #   networks:
  #     - app-network

volumes:
  postgres_data:
  qdrant_data:
  personas_uploads:

networks:
  app-network:
    driver: bridge
